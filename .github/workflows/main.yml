# This is a basic workflow to help you get started with Actions

name: Getting Started

# Controls when the workflow will run #
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}  # Using the secret token
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run the calculate_complexity_scores.py script
        run: python calculate_complexity_scores.py --username 'jfgm' --password 'CompuIDT1598@' --ClientID '1598' --ClientSecret 'babd134e-fc99-4a84-8e8c-719e9125d5d1' 'Test_file_Complexity_Scores.nt' 'OUTPUT'
        
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      #Store Output.nt document in repository
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add OUTPUT.nt
          git commit -m "Add output file of the complexity score"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Using the secret token
